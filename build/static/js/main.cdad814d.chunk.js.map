{"version":3,"sources":["assets/images/home2.png","assets/images/home1.png","logo.svg","components/menu/AppBar.js","components/menu/Footer.js","components/pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppBarMenu","AppBar","position","alignitems","color","Toolbar","Grid","container","justify","wrap","item","Typography","variant","to","className","Footer","Container","maxWidth","style","marginTop","marginBottom","marginRight","marginLeft","Home","Button","disableElevation","src","home1","width","height","background","home2","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,4ECA3CD,EAAOC,QAAU,IAA0B,kC,sTCyD5BC,G,MApCK,WAChB,OACM,kBAAC,IAAD,KACF,6BAEI,kBAACC,EAAA,EAAD,CAAQC,SAAW,SACXC,WAAa,SACbC,MAAQ,WACZ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAU,SAClBC,KAAO,QACf,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACV,kBAACC,EAAA,EAAD,CAAYC,QAAU,SASrB,kBAAC,IAAD,CACAC,GAAK,kBACLC,UAAY,OAFZ,IAEoB,sCAFpB,Y,2DCmBNC,G,MAhDA,WACX,OACI,6BACE,kBAACd,EAAA,EAAD,CAAQC,SAAW,SACXE,MAAQ,WACd,kBAACY,EAAA,EAAD,CAAWC,SAAW,KACVC,MAAU,CAAEC,UAAW,OAAQC,aAAc,SACrD,kBAACf,EAAA,EAAD,CAASa,MAAU,CAAEC,UAAW,OAAQC,aAAc,OAAQC,YAAa,UACvE,kBAACV,EAAA,EAAD,CAAYC,QAAU,QAAQR,MAAQ,WAAtC,sBAIJ,8FAMC,yBAAKc,MAAS,CAACC,UAAW,SAAUG,WAAY,QAE5C,yCACA,uBAAGJ,MAAS,CAACI,WAAY,UAAzB,WACA,uBAAGJ,MAAS,CAACI,WAAY,QAAzB,mBACA,uBAAGJ,MAAU,CAACI,WAAY,UAA1B,WAIL,yBAAKJ,MAAS,CAACC,UAAW,SAAUG,WAAY,UAExC,oCACC,uBAAGJ,MAAS,CAACI,WAAY,SAAzB,iBACA,uBAAGJ,MAAS,CAACI,WAAY,SAAzB,qBACA,uBAAGJ,MAAS,CAAEI,WAAY,SAA1B,kBACA,uBAAGJ,MAAS,CAACI,WAAY,SAAzB,wBCWTC,EA9CH,WACT,OACE,6BAEE,kBAAC,EAAD,MAEE,yBAAKT,UAAY,cAEnB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,0DACA,2EACA,kBAACU,EAAA,EAAD,CAAQV,UAAU,UAAUF,QAAQ,YAAYR,MAAM,UAAUqB,kBAAgB,GAAhF,kBAIF,yBAAKX,UAAU,cACb,yBAAKA,UAAU,YAAYY,IAAKC,QAIpC,yBAAKb,UAAU,aACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,SAAd,gCACA,wBAAII,MAAS,CAACU,MAAO,OAAQC,OAAQ,MAAOC,WAAY,QAASR,WAAW,UAC5E,uBAAGJ,MAAU,CAACI,WAAY,WAA1B,gDACA,kBAACE,EAAA,EAAD,CAAQZ,QAAU,WAClBR,MAAQ,UACRqB,kBAAgB,EAChBP,MAAS,CAAEC,UAAW,OAAQG,WAAY,WAH1C,eAOF,yBAAKR,UAAU,cACb,yBAAKA,UAAU,YAAYY,IAAKK,SAMpC,kBAAC,EAAD,QClCOC,MAVf,WACE,OACE,yBAAKlB,UAAU,OACV,kBAAC,EAAD,QCEWmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cdad814d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home2.746c9beb.png\";","module.exports = __webpack_public_path__ + \"static/media/home1.f184eb8d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    AppBar,\n    Typography,\n    Toolbar\n} from \"@material-ui/core\";\nimport {\n     BrowserRouter as Router,\n     Switch,\n     Route,\n     Link,\n     NavLink\n} from 'react-router-dom'\nimport './AppBar.css';\nimport Login from '../pages/authen'\n\n\n const AppBarMenu = () => {\n    return (\n          <Router>\n        <div>\n          \n            <AppBar position = \"static\"\n                    alignitems = \"center\"\n                    color = \"primary\" >\n                <Toolbar>\n                    <Grid container justify = \"center\"\n                            wrap = \"wrap\" >\n                    <Grid item >\n                    <Typography variant = \"h6\"> \n                   \n                    </Typography>  \n                    \n                    </Grid>  \n                    </Grid>\n\n                 \n                     \n                     <NavLink \n                     to = \"../pages/authen\"\n                     className = \"nav\" > <p> Login </p>  </NavLink>\n                \n                </Toolbar>  \n\n               \n            </AppBar>\n\n        </div>\n        </Router>\n    )\n}\n\n\nexport default AppBarMenu","import React from 'react'\nimport {\n    Button,\n    TextField,\n    Grid,\n    Container,\n    AppBar,\n    Typography,\n    Toolbar\n} from \"@material-ui/core\";\nimport './Footer.css';\n\n\nconst Footer = ()  => {\n    return (\n        <div>\n          <AppBar position = \"static\"\n                  color = \"primary\" >\n            <Container maxWidth = \"md\"\n                        style = { { marginTop: \"30px\", marginBottom: \"50px\"} }>\n                <Toolbar style = { { marginTop: \"30px\", marginBottom: \"50px\", marginRight: \"690px\"} }>\n                    <Typography variant = \"body1\" color = \"inherit\" >\n                    &\n                    copy;\n                2019 Gistia\n                <p> We provide a telemedecine affrodable platefrom for everyone </p>\n                    </Typography> \n\n                    \n                </Toolbar> \n\n                 <div style = {{marginTop: \"-140px\", marginLeft: \"0px\"}}>\n\n                     <h3> Company </h3> \n                     <p style = {{marginLeft: \"-45px\"}}> About </p> \n                     <p style = {{marginLeft: \"5px\" }}> Find a doctor </p> \n                     <p style = { {marginLeft: \"-55px\"}}> Apps </p> \n                         \n                </div>\n\n                <div style = {{marginTop: \"-160px\", marginLeft: \"700px\"}}>\n\n                        <h3>Help</h3>\n                         <p style = {{marginLeft: \"35px\"}}> help center </p>\n                         <p style = {{marginLeft: \"65px\"}}> Contact support </p>\n                         <p style = {{ marginLeft: \"35px\"}}> Instructions </p>\n                         <p style = {{marginLeft: \"45px\" }}> How it works </p>\n                </div>\n               \n                \n            </Container> \n\n            \n                \n          </AppBar>\n            \n        </div>\n    )\n}\n\n\nexport default Footer\n\n","import React from 'react'\nimport {\n    CardMedia,\n    Button\n} from '@material-ui/core';\nimport home1 from '../../assets/images/home2.png'\nimport home2 from \"../../assets/images/home1.png\";\nimport \"./Home.css\";\nimport AppBarMenu from '../menu/AppBar'\nimport Footer from '../menu/Footer'\n\nconst Home = () => {\n    return (\n      <div>\n\n        <AppBarMenu />\n\n          <div className = \"contenaire\" >\n\n        <div className=\"content-1\">\n          <div className=\"aling-text1\">\n            <h1>Virtual healthcare for you</h1>\n            <p>Easy to use web application at your disposal</p>\n            <Button className=\"button1\" variant=\"contained\" color=\"primary\" disableElevation >\n              FIND A DOCTOR\n            </Button>\n          </div>\n          <div className=\"aling-img1\">\n            <img className=\"home-img1\" src={home1} />\n          </div>\n        </div>\n\n        <div className=\"content-2\">\n          <div className=\"aling-text2\">\n            <h1 className=\"text2\">Leading healthcare providers</h1>\n            <hr style = {{width: '50px', height: '1px', background: \"black\", marginLeft:\"40px\" }}/>\n            <p style = { {marginLeft: \"-130px\"}} > We provide the best healthcare application </p>\n            <Button variant = \"outlined\"\n            color = \"primary\"\n            disableElevation \n            style = {{ marginTop: \"60px\", marginLeft: \"-300px\"}}>\n              Learn more\n            </Button>\n          </div>\n          <div className=\"aling-img2\">\n            <img className=\"home-img2\" src={home2} />\n          </div>\n        </div>\n\n        </div>\n\n        <Footer/>\n      </div>\n    );\n}\n\n\nexport default  Home","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './components/pages/authen/index.js';\nimport Registration from './components/pages/registraction/index.js';\nimport Home from './components/pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n         <Home/>\n\n         \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}